{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Li",
				"Living\t(home.items)"
			],
			[
				"open",
				"openhab2"
			],
			[
				"Ś",
				"Światła"
			],
			[
				"weather-co",
				"weather-content\t(_climaicon.scss)"
			],
			[
				"weath",
				"weather-icon\t(weather.tpl.html)"
			],
			[
				"in",
				"inline-block"
			],
			[
				"disl",
				"display"
			],
			[
				"movi",
				"moviePath"
			],
			[
				"entr",
				"entryExist"
			],
			[
				"PRICE",
				"PRICE_TO"
			],
			[
				"PRICE_",
				"PRICE_FROM"
			],
			[
				"tty",
				"ttyAMA0"
			],
			[
				"un",
				"unitPrice"
			],
			[
				"first",
				"firstCol"
			],
			[
				"parse",
				"parsedResults"
			],
			[
				"seq",
				"seqno"
			]
		]
	},
	"buffers":
	[
		{
			"file": "ESH-INF/config/config.xml",
			"settings":
			{
				"buffer_size": 942,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "pom.xml",
			"settings":
			{
				"buffer_size": 591,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "about.html",
			"settings":
			{
				"buffer_size": 2586,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/openhab2-master/git/openhab2-addons/features/pom.xml",
			"settings":
			{
				"buffer_size": 706,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/openhab2-master/git/openhab2-addons/features/openhab-addons-verify/pom.xml",
			"settings":
			{
				"buffer_size": 4067,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/openhab2-master/git/openhab2-addons/features/openhab-addons-external/pom.xml",
			"settings":
			{
				"buffer_size": 1864,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/openhab2-master/git/openhab2-addons/features/openhab-addons/src/main/feature/feature.xml",
			"settings":
			{
				"buffer_size": 18423,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "META-INF/MANIFEST.MF",
			"settings":
			{
				"buffer_size": 565,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "OSGI-INF/TTSServiceIvona.xml",
			"settings":
			{
				"buffer_size": 1026,
				"line_ending": "Windows"
			}
		},
		{
			"file": "build.properties",
			"settings":
			{
				"buffer_size": 254,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/main/java/org/openhab/voice/ivona/tool/CreateTTSCache.java",
			"settings":
			{
				"buffer_size": 4421,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/main/java/org/openhab/voice/ivona/internal/IvonaVoice.java",
			"settings":
			{
				"buffer_size": 1643,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/main/java/org/openhab/voice/ivona/internal/IvonaAudioStream.java",
			"settings":
			{
				"buffer_size": 966,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/main/java/org/openhab/voice/ivona/internal/IvonaTTSService.java",
			"settings":
			{
				"buffer_size": 7538,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 41.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"java",
				"Pretty JSON: Validate"
			],
			[
				"package up",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"termn",
				"Preferences: Terminal Settings – User"
			],
			[
				"scss",
				"Set Syntax: SCSS"
			],
			[
				"winme",
				"WinMerge: Show Diff"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"",
				"AlignTab: Live Preview Mode"
			],
			[
				"html",
				"HTMLPrettify"
			],
			[
				"es",
				"ESLint Formatter: Format this file"
			],
			[
				"formatt",
				"CodeFormatter: Format Code"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"sublimall",
				"Sublimall: Upload"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"eslin",
				"ESLint Formatter: Format this file"
			],
			[
				"pretty",
				"HTMLPrettify"
			],
			[
				"csscom",
				"Run CSScomb"
			],
			[
				"css",
				"Run CSScomb"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"markd",
				"Set Syntax: Markdown"
			],
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"alignment",
				"Preferences: Alignment File Settings – Default"
			],
			[
				"coffee",
				"Set Syntax: CoffeeScript"
			],
			[
				"forma",
				"CodeFormatter: Format Code"
			],
			[
				"insall",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Remove Package"
			],
			[
				"color",
				"Toggle Colorcode on this view"
			],
			[
				"packag insta",
				"Package Control: Install Package"
			],
			[
				"packag remo",
				"Package Control: Remove Package"
			],
			[
				"colorcode",
				"Toggle Colorcode on this view"
			],
			[
				"aut",
				"PHP CodeBeautifier"
			],
			[
				"php",
				"PHP CodeBeautifier"
			],
			[
				"format",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"isntal",
				"Package Control: Install Package"
			]
		],
		"width": 536.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": false,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.ivona",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.ivona/ESH-INF",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.ivona/ESH-INF/config",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.ivona/lib",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.ivona/META-INF",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.ivona/OSGI-INF",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.ivona/src",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.ivona/src/main",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.ivona/src/main/java",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.ivona/src/main/java/org",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.ivona/src/main/java/org/openhab",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.ivona/src/main/java/org/openhab/voice",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.ivona/src/main/java/org/openhab/voice/ivona",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.ivona/src/main/java/org/openhab/voice/ivona/internal",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.ivona/src/main/java/org/openhab/voice/ivona/tool",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.ivona/target/maven-archiver",
		"/C/openhab2-master/git/openhab2-addons/addons/binding/org.openhab.binding.amazondashbutton",
		"/C/openhab2-master/git/openhab2-addons/addons/binding/org.openhab.binding.amazondashbutton/ESH-INF",
		"/C/openhab2-master/git/openhab2-addons/addons/binding/org.openhab.binding.amazondashbutton/ESH-INF/binding",
		"/C/openhab2-master/git/openhab2-addons/addons/binding/org.openhab.binding.amazondashbutton/ESH-INF/i18n",
		"/C/openhab2-master/git/openhab2-addons/addons/binding/org.openhab.binding.amazondashbutton/ESH-INF/thing",
		"/C/openhab2-master/git/openhab2-addons/addons/binding/org.openhab.binding.amazondashbutton/lib",
		"/C/openhab2-master/git/openhab2-addons/addons/binding/org.openhab.binding.amazondashbutton/META-INF",
		"/C/openhab2-master/git/openhab2-addons/addons/binding/org.openhab.binding.amazondashbutton/src",
		"/C/openhab2-master/git/openhab2-addons/addons/binding/org.openhab.binding.amazondashbutton/src/main",
		"/C/openhab2-master/git/openhab2-addons/addons/binding/org.openhab.binding.amazondashbutton/src/main/java",
		"/C/openhab2-master/git/openhab2-addons/addons/binding/org.openhab.binding.amazondashbutton/src/main/java/org",
		"/C/openhab2-master/git/openhab2-addons/addons/binding/org.openhab.binding.amazondashbutton/src/main/java/org/openhab",
		"/C/openhab2-master/git/openhab2-addons/addons/binding/org.openhab.binding.amazondashbutton/src/main/java/org/openhab/binding",
		"/C/openhab2-master/git/openhab2-addons/addons/binding/org.openhab.binding.amazondashbutton/src/main/java/org/openhab/binding/amazondashbutton",
		"/C/openhab2-master/git/openhab2-addons/addons/binding/org.openhab.binding.amazondashbutton/src/main/java/org/openhab/binding/amazondashbutton/handler",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.kaldi",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.kaldi/META-INF",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.kaldi/OSGI-INF",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.kaldi/src",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.kaldi/src/main",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.kaldi/target",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.kaldi/target/classes"
	],
	"file_history":
	[
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.ivona/.classpath",
		"/C/openhab2-master/git/openhab2-addons/features/openhab-addons-external/src/main/resources/conf/ivona.cfg",
		"/C/openhab2-master/git/openhab2-addons/features/openhab-addons-external/src/pom.xml",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.ivona/about.html",
		"//OPENHABIANPI/openHAB-conf/html/scrap/distance.js",
		"//OPENHABIANPI/openHAB-conf/services/addons.cfg",
		"/C/Users/Kuba/Desktop/events.log",
		"//OPENHABIANPI/openHAB-conf/rules/household.rules",
		"//OPENHABIANPI/openHAB-conf/rules/dash.rules",
		"//OPENHABIANPI/openHAB-conf/items/weather.items",
		"//OPENHABIANPI/openHAB-conf/rules/airquality.rules",
		"//OPENHABIANPI/openHAB-conf/persistence/influxdb.persist",
		"//OPENHABIANPI/openHAB-conf/sitemaps/default.sitemap",
		"/C/projects/pushbullet/push.js",
		"/C/openhab2-master/git/openhab-distro/features/openhab-demo-resources/src/main/resources/items/demo.items",
		"/C/projects/scraper/talk.js",
		"//OPENHABIANPI/openHAB-conf/items/home.items",
		"//OPENHABIANPI/openHAB-conf/transform/washing_pl.map",
		"//OPENHABIANPI/openHAB-conf/items/devices.items",
		"//OPENHABIANPI/openHAB-conf/.gitignore",
		"//OPENHABIANPI/openHAB-conf/html/scrap/airquality.js",
		"/C/Users/Kuba/Desktop/dump.html",
		"/C/projects/scraper/airquality.js",
		"//OPENHABIANPI/openHAB-conf/items/speedtest.items",
		"//OPENHABIANPI/openHAB-conf/rules/speedtest.rules",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/org.openhab.voice.ivona/pom.xml",
		"/C/openhab2-master/git/openhab2-addons/addons/voice/pom.xml",
		"/C/Users/Kuba/Desktop/openhab.log",
		"/C/Users/Kuba/AppData/Local/Temp/scp20736/var/log/openhab2/openhab.log",
		"/C/Users/Kuba/Dropbox/SmartHome/rules/rules_openhab.rules",
		"/C/Users/Kuba/Downloads/win.md",
		"/C/Users/Kuba/.bashrc",
		"/C/Users/Kuba/AppData/Roaming/Sublime Text 3/Packages/User/Terminal.sublime-settings",
		"/C/projects/org.openhab.ui.habpanel/web/app/widgets/switch/switch.widget.js",
		"/C/projects/org.openhab.ui.habpanel/web/node_modules/ajv/lib/dotjs/switch.js",
		"/C/Users/Kuba/Dropbox/SmartHome/Instructions/Network.txt",
		"/C/Users/Kuba/pi/backup/openhab.cfg",
		"/C/projects/openhab_/conf/items/weather.items",
		"/C/projects/openhab_/conf/items/speedtest.items",
		"/C/Users/Kuba/Dropbox/SmartHome/rules/speedtest.rules",
		"/C/Users/Kuba/Desktop/sitemap-converter.js",
		"//OPENHABIANPI/openHAB-userdata/zwave/node10.xml",
		"/C/projects/sub/index.js",
		"/C/Users/Kuba/Dropbox/SmartHome/persistence/influxdb.persist",
		"//OPENHABIANPI/openHAB-conf/services/influxdb.cfg",
		"//OPENHABIANPI/openHAB-userdata/zwave/node8.xml",
		"/C/Users/Kuba/Dropbox/SmartHome/items/home.items",
		"/C/Users/Kuba/Dropbox/SmartHome/items/weather.items",
		"/C/projects/org.openhab.ui.habpanel/web/app/widgets/weather/weather.widget.js",
		"/C/projects/org.openhab.ui.habpanel/web/app/services/openhab.service.js",
		"/C/projects/org.openhab.ui.habpanel/web/app/widgets/weather/weather.settings.tpl.html",
		"/C/projects/org.openhab.ui.habpanel/web/app/widgets/weather/weather.tpl.html",
		"/C/Users/Kuba/Dropbox/medius.html",
		"/C/projects/sub/sub.bat",
		"/C/Users/Kuba/Downloads/Movies/Black.Mirror.S03E02.WEBRip.x264-SKGTV[rarbg]/black.mirror.s03e02.webrip.x264-skgtv.srt",
		"/C/Users/Kuba/Dropbox/SmartHome/items/speedtest.items",
		"/C/projects/scraper/scrap.js",
		"//OPENHABIANPI/openHAB-conf/services/mqtt.cfg",
		"/C/Users/Kuba/Desktop/Nałkowskiej/Nalkowskiej.txt",
		"/C/projects/scraper/test.js",
		"//OPENHABIANPI/openHAB-conf/sitemaps/home.sitemap",
		"/C/Users/Kuba/Dropbox/SmartHome/rules/zwave.rules",
		"/C/Users/Kuba/Dropbox/SmartHome/items/devices.items",
		"/C/projects/openhab_/conf/persistence/influxdb.persist",
		"/C/projects/openhab_/conf/items/devices.items",
		"/C/projects/openhab_/conf/items/home.items",
		"//OPENHABIANPI/openHAB-conf/services/weather.cfg",
		"/C/Users/Kuba/pi/openhab.cfg",
		"/C/Users/Kuba/Dropbox/SmartHome/rules/watchdog.sh",
		"/C/projects/openhab_/conf/persistence/rrd4j.persist",
		"/C/projects/openhab_/conf/items/demo.items",
		"//OPENHABIANPI/openHAB-userdata/zwave/node1.xml",
		"//OPENHABIANPI/openHAB-userdata/zwave/node53.xml",
		"/C/Users/Kuba/AppData/Local/Temp/scp10679/opt/scrap/petrol.js",
		"/C/projects/org.openhab.ui.habpanel/web/assets/icons/freepik-housethings/mail-box.svg",
		"/C/projects/org.openhab.ui.habpanel/web/app/settings/settings.html.bak",
		"/C/Users/Kuba/AppData/Roaming/Sublime Text 3/Packages/Terminal/Terminal.sublime-settings",
		"/C/projects/org.openhab.ui.habpanel/web/app/menu/menu.controller.js",
		"/C/projects/org.openhab.ui.habpanel/web/app/services/persistence.service.js",
		"/C/projects/org.openhab.ui.habpanel/web/app/widgets/chart/chart.settings.tpl.html",
		"/C/projects/org.openhab.ui.habpanel/web/app/widgets/button/button.settings.tpl.html",
		"/C/projects/org.openhab.ui.habpanel/web/app/dashboard/dashboard.edit.controller.js",
		"/C/projects/org.openhab.ui.habpanel/web/app/widgets/weather/weather.scss",
		"/C/projects/org.openhab.ui.habpanel/web/bower_components/selectize/dist/sass/selectize.scss",
		"/C/projects/org.openhab.ui.habpanel/web/assets/styles/common.scss",
		"/C/projects/org.openhab.ui.habpanel/web/vendor/vendor.scss",
		"/C/projects/org.openhab.ui.habpanel/web/app/widgets/image/image.settings.tpl.html",
		"/C/projects/org.openhab.ui.habpanel/web/app/widgets/weather/_climaicon.scss",
		"/C/projects/org.openhab.ui.habpanel/web/app/settings/settings.html",
		"/C/projects/org.openhab.ui.habpanel/web/index.html",
		"/C/projects/org.openhab.ui.habpanel/web/app/widgets/weather/_math.scss",
		"/C/projects/org.openhab.ui.habpanel/web/assets/styles/themes/translucent/translucent.min.css",
		"/C/Users/Kuba/.gitconfig",
		"/C/projects/org.openhab.ui.habpanel/web/app/widgets/dummy/dummy.widget.js",
		"/C/projects/org.openhab.ui.habpanel/web/gulpfile.js",
		"/C/projects/org.openhab.ui.habpanel/web/app/widgets/image/image.widget.js",
		"/C/projects/org.openhab.ui.habpanel/web/bower_components/selectize/dist/sass/selectize.bootstrap3.scss",
		"/C/projects/org.openhab.ui.habpanel/web/app/widgets/chart/chart.widget.js",
		"/C/projects/org.openhab.ui.habpanel/web/app/app.js",
		"/C/projects/org.openhab.ui.habpanel/web/app/widgets/thermostat/thermostat.widget.js",
		"/C/projects/org.openhab.ui.habpanel/web/app/widgets/thermostat/thermostat.tpl.html",
		"/C/projects/org.openhab.ui.habpanel/web/app/widgets/thermostat/thermostat.settings.tpl.html",
		"/C/projects/org.openhab.ui.habpanel/web/assets/icons/climacons.json",
		"/C/Users/Kuba/Downloads/Movies/The.Fall.S03E01.WEB-DL.x264-RARBG/The.Fall.S03E01.WEB-DL.x264-RARBG.srt",
		"/C/projects/svg/entry.txt",
		"/C/Users/Kuba/Desktop/wp-cloudy/wpcloudy-admin.php",
		"/C/projects/entry.txt",
		"/C/Users/Kuba/Dropbox/SmartHome/transform/weather_pl.map",
		"/C/Users/Kuba/Dropbox/SmartHome/rules/ventilation.rules",
		"/C/Users/Kuba/Dropbox/SmartHome/rules/traffic.rules",
		"/C/projects/scraper/test.html",
		"/C/Users/Kuba/Desktop/sub.bat",
		"/C/projects/org.openhab.ui.habpanel/.git/info/exclude",
		"/C/Users/Kuba/Downloads/Movies/The.Fall.S03E01.WEB-DL.x264-RARBG/The.Fall.S03E01.WEB-DL.x264-RARBG_kopia.srt",
		"/C/Users/Kuba/Downloads/Movies/Jordskott S01 E01 - Hardcoded Eng Subs - Sno/Jordskott S01 E01 - Hardcoded Eng Subs - Sno.mp4",
		"/C/projects/org.openhab.ui.habpanel/web/app/settings/settings.controller.js",
		"/C/projects/org.openhab.ui.habpanel/web/app/widgets/label/label.tpl.html",
		"/C/projects/org.openhab.ui.habpanel/web/app/widgets/label/label.settings.tpl.html",
		"/C/projects/org.openhab.ui.habpanel/web/app/widgets/template/template.settings.tpl.html",
		"/C/projects/org.openhab.ui.habpanel/web/app/widgets/template/template.widget.js",
		"/C/projects/org.openhab.ui.habpanel/web/assets/styles/dashboard.scss",
		"/C/projects/org.openhab.ui.habpanel/web/package.json",
		"/C/projects/org.openhab.ui.habpanel/web/vendor/vendor.min.css",
		"/C/projects/org.openhab.ui.habpanel/web/assets/styles.min.css",
		"/C/projects/org.openhab.ui.habpanel/web/app/widgets/button/button.widget.js",
		"/C/Users/Kuba/Dropbox/SmartHome/Dash/dash_buttons.txt",
		"/C/projects/org.openhab.ui.habpanel/web/bower_components/roboto-fontface/css/mixins.scss",
		"/C/projects/org.openhab.ui.habpanel/web/bower_components/roboto-fontface/css/roboto/sass/roboto-fontface.scss"
	],
	"find":
	{
		"height": 42.0
	},
	"find_in_files":
	{
		"height": 102.0,
		"where_history":
		[
			"ivona-speechcloud-sdk",
			"C:\\openhab2-master\\git\\openhab2-addons\\addons",
			"C:\\projects\\org.openhab.ui.habpanel\\web\\",
			"C:\\projects\\org.openhab.ui.habpanel\\web\\*",
			"C:\\projects\\org.openhab.ui.habpanel\\web\\*.scss",
			"C:\\projects\\org.openhab.ui.habpanel\\web\\**\\*.scss",
			"C:\\projects\\org.openhab.ui.habpanel\\web\\",
			"C:\\projects\\org.openhab.ui.habpanel\\web\\assets",
			"C:\\projects\\org.openhab.ui.habpanel\\web",
			"C:\\projects\\org.openhab.ui.habpanel\\web\\app\\widgets",
			"C:\\projects\\org.openhab.ui.habpanel\\web\\assets\\less",
			"C:\\projects\\org.openhab.ui.habpanel\\web\\app",
			"C:\\projects\\org.openhab.ui.habpanel\\web\\assets\\less",
			"C:\\projects\\org.openhab.ui.habpanel\\web\\app",
			"C:\\projects\\org.openhab.ui.habpanel\\web",
			"C:\\projects\\atlasboard",
			"C:\\projects\\habmin\\src\\languages\\",
			"C:\\projects\\habmin\\src\\languages\\pl-PL"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"\n               ",
			"/,\\\n",
			"jar",
			"ivona",
			"java",
			"<dependency>",
			"washingstate",
			"Indeks Jakości Powietrza:",
			"115",
			"niezdrow",
			"log",
			"rerun",
			"float",
			"aqi",
			"speedtestCliOutput",
			"module",
			"amazon",
			"eth0",
			"eth0:",
			"Washingmachine_OpState",
			"Washingmachine_Power",
			"eth0:",
			"wlan0",
			"eth0:",
			"eth0",
			"eth",
			"wlan0",
			"lo:",
			"lo",
			"wlan0",
			"amazon",
			"DHCP",
			")\n",
			"dziecka",
			"Living_Window_Battery",
			"luminan",
			"LAMP",
			"everyHour",
			")\n",
			"Office_Humidity",
			"Office_Temp",
			"Ruch",
			"forecast",
			"sensor",
			"salonie",
			"5KW",
			"Relay",
			"value",
			"Item",
			"modal",
			"bootstrap",
			"@",
			"increase",
			"sin",
			"value",
			"temperatureItem",
			"form",
			"\\n\\n",
			"function ",
			"}\\n",
			"() {",
			"\t';\\n",
			"\treturn '\\n",
			"Lightning",
			"=",
			"thunder",
			"aqi",
			"();\n",
			"Work_Traffic",
			",",
			"switch",
			"dummy",
			"registerType",
			"register",
			"Dummy",
			"dummy",
			"function",
			"backgroundColor",
			">\n",
			"wid",
			"ui-thermostat",
			"<<<<<",
			"widget",
			"knob",
			"Knob",
			"RESTConfig",
			"rest.host",
			"OH2ServiceConfiguration",
			"panelsRegistry",
			"rootScope",
			"rest.host",
			"'rest'",
			"OH2StorageService",
			"/rest/",
			"rest.host",
			"HOST",
			"config",
			"/rest/",
			" '/",
			"/rest/",
			"selectize-box-shadow",
			"js",
			"',\n",
			"min",
			"',\n",
			"\";\n",
			"gridster",
			"$widget-color",
			"dash-buttons",
			"$widget-bg",
			"$primary-bg",
			"less",
			"less/",
			"sign",
			"$scope",
			"$slider-pointer",
			"calc(",
			"fade(",
			".main",
			"template",
			"bootstrap",
			"bootstrap-sass-asset-helper",
			"\";\n",
			"less",
			"];\n",
			"',\n",
			"hash",
			"',\n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"script",
			"WashingState",
			"WashingMeter",
			"",
			"Weather",
			"weather",
			"thermostat",
			"Thermostat",
			"RESTConfig.host",
			"rest.host",
			"$widget-design-bg",
			"$widget-color",
			"$primary-color",
			"@widget-text-color",
			"@widget-bg",
			"@primary-bg",
			"nodeScriptOutput",
			"",
			"=",
			"',",
			": '",
			",\\n",
			"\\n",
			"then",
			"end",
			"\\nthen\\n\\t->",
			"Living Room",
			"Astro",
			"Thermometers",
			"\"\"",
			"\\nthen\\nend",
			"end",
			"background-color: inherit;",
			"gDevices",
			"XXXX",
			"]|T",
			"|http",
			"raspberrypi",
			"Weather",
			"(Weather)",
			"Chłodny wiatr",
			"Podmuch wiatru",
			"Prędkość wiatru",
			"Temperatura",
			"Flat",
			": ",
			" :",
			" ",
			"\",",
			": \"",
			",\\n",
			"\"\\n\"",
			">",
			"</",
			"\"",
			"\\n",
			"\\r\\n",
			"wykres",
			"Wykres",
			"Wykresy",
			"Przedmioty",
			"Wykresy",
			"Home_away",
			"Flat_",
			"flat_",
			"(Flat)",
			"(Parter)",
			"swiatla",
			"sufity",
			"parter",
			"",
			"boiler",
			"parter",
			"Parter",
			"parter",
			"Parter",
			"xbmc:laptop",
			"\"Drzwi wejściowe ",
			"\"Temperatura ",
			"\"Okno Pracowni\"",
			"\"Łazienka\"",
			"\"Sypialnia\"",
			"\"Pokój dzienny\"",
			"\"Kuchnia\"",
			"\"Toaleta\"",
			"\"Drzwi wejściowe\"",
			"\"Taras\"",
			"\"Garaż\"",
			"\"Pralnia\"",
			"\"Lustro\"",
			"\"Korytarz\"",
			"\"Sufit\"",
			"-",
			"",
			",",
			" ",
			"\\n",
			";\\n",
			"\\n",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"folders":
	[
		{
			"path": "C:\\openhab2-master\\git\\openhab2-addons\\addons\\voice\\org.openhab.voice.ivona"
		},
		{
			"path": "C:\\openhab2-master\\git\\openhab2-addons\\addons\\binding\\org.openhab.binding.amazondashbutton"
		},
		{
			"path": "C:\\openhab2-master\\git\\openhab2-addons\\addons\\voice\\org.openhab.voice.voicerss"
		},
		{
			"path": "C:\\openhab2-master\\git\\openhab2-addons\\addons\\voice\\org.openhab.voice.kaldi"
		}
	],
	"groups":
	[
		{
			"selected": 13,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ESH-INF/config/config.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 942,
						"regions":
						{
						},
						"selection":
						[
							[
								805,
								805
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_helper.box_height": 22,
							"color_helper.color_scheme": "Packages/Theme - Spacegray/base16-ocean.dark.tmTheme",
							"color_helper.file_palette":
							[
							],
							"color_helper.preview_meta":
							{
							},
							"color_helper.scan":
							{
								"current_ext": ".xml",
								"current_syntax": "XML/XML",
								"enabled": false,
								"last_updated": 1479573505.42
							},
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "pom.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 591,
						"regions":
						{
						},
						"selection":
						[
							[
								579,
								579
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										569,
										578
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/tag.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										543,
										552
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_helper.box_height": 22,
							"color_helper.color_scheme": "Packages/Theme - Spacegray/base16-ocean.dark.tmTheme",
							"color_helper.file_palette":
							[
							],
							"color_helper.preview_meta":
							{
							},
							"color_helper.scan":
							{
								"current_ext": ".xml",
								"current_syntax": "XML/XML",
								"enabled": false,
								"last_updated": 1479573505.42
							},
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "about.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2586,
						"regions":
						{
						},
						"selection":
						[
							[
								2031,
								2031
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_helper.box_height": 22,
							"color_helper.color_scheme": "Packages/Theme - Spacegray/base16-ocean.dark.tmTheme",
							"color_helper.file_palette":
							[
							],
							"color_helper.preview_meta":
							{
							},
							"color_helper.scan":
							{
								"allowed_colors":
								[
									"webcolors",
									"hex",
									"rgb",
									"hex_compressed",
									"rgba",
									"hsl",
									"hsla"
								],
								"compress_hex_output": true,
								"current_ext": ".html",
								"current_syntax": "HTML/HTML",
								"enabled": true,
								"last_updated": 1479573505.42,
								"scan_completion_scopes":
								[
								],
								"scan_scopes":
								[
									"meta.property-list.css -support.type.property-name.css -comment -string",
									"meta.property-value.css -comment -string",
									"meta.value.css -comment -string",
									"meta.tag.inline.any.html string.quoted",
									"meta.tag.any.html meta.attribute-with-value.style.html"
								],
								"use_hex_argb": false
							},
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1214.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/openhab2-master/git/openhab2-addons/features/pom.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 706,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_helper.box_height": 22,
							"color_helper.color_scheme": "Packages/Theme - Spacegray/base16-ocean.dark.tmTheme",
							"color_helper.file_palette":
							[
							],
							"color_helper.preview_meta":
							{
							},
							"color_helper.scan":
							{
								"current_ext": ".xml",
								"current_syntax": "XML/XML",
								"enabled": false,
								"last_updated": 1479573505.42
							},
							"syntax": "Packages/XML/XML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/C/openhab2-master/git/openhab2-addons/features/openhab-addons-verify/pom.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4067,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_helper.box_height": 22,
							"color_helper.color_scheme": "Packages/Theme - Spacegray/base16-ocean.dark.tmTheme",
							"color_helper.file_palette":
							[
							],
							"color_helper.preview_meta":
							{
							},
							"color_helper.scan":
							{
								"current_ext": ".xml",
								"current_syntax": "XML/XML",
								"enabled": false,
								"last_updated": 1479573505.42
							},
							"syntax": "Packages/XML/XML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/C/openhab2-master/git/openhab2-addons/features/openhab-addons-external/pom.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1864,
						"regions":
						{
						},
						"selection":
						[
							[
								1476,
								1476
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1478,
										1488
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/tag.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										1460,
										1470
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_helper.box_height": 22,
							"color_helper.color_scheme": "Packages/Theme - Spacegray/base16-ocean.dark.tmTheme",
							"color_helper.file_palette":
							[
							],
							"color_helper.preview_meta":
							{
							},
							"color_helper.scan":
							{
								"current_ext": ".xml",
								"current_syntax": "XML/XML",
								"enabled": false,
								"last_updated": 1479573505.42
							},
							"syntax": "Packages/XML/XML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 792.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/C/openhab2-master/git/openhab2-addons/features/openhab-addons/src/main/feature/feature.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18423,
						"regions":
						{
						},
						"selection":
						[
							[
								15845,
								15845
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										15849,
										15850
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										15843,
										15844
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_helper.box_height": 22,
							"color_helper.color_scheme": "Packages/Theme - Spacegray/base16-ocean.dark.tmTheme",
							"color_helper.file_palette":
							[
							],
							"color_helper.preview_meta":
							{
							},
							"color_helper.scan":
							{
								"current_ext": ".xml",
								"current_syntax": "XML/XML",
								"enabled": false,
								"last_updated": 1479573505.42
							},
							"syntax": "Packages/XML/XML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8708.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "META-INF/MANIFEST.MF",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 565,
						"regions":
						{
						},
						"selection":
						[
							[
								303,
								303
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_helper.box_height": 22,
							"color_helper.color_scheme": "Packages/Theme - Spacegray/base16-ocean.dark.tmTheme",
							"color_helper.file_palette":
							[
							],
							"color_helper.preview_meta":
							{
							},
							"color_helper.scan":
							{
								"current_ext": ".mf",
								"current_syntax": "Text/Plain text",
								"enabled": false,
								"last_updated": 1479573505.42
							},
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "OSGI-INF/TTSServiceIvona.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1026,
						"regions":
						{
						},
						"selection":
						[
							[
								931,
								931
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										931,
										932
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										925,
										926
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_helper.box_height": 22,
							"color_helper.color_scheme": "Packages/Theme - Spacegray/base16-ocean.dark.tmTheme",
							"color_helper.file_palette":
							[
							],
							"color_helper.preview_meta":
							{
							},
							"color_helper.scan":
							{
								"current_ext": ".xml",
								"current_syntax": "XML/XML",
								"enabled": false,
								"last_updated": 1479573505.42
							},
							"syntax": "Packages/XML/XML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 60.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "build.properties",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 254,
						"regions":
						{
						},
						"selection":
						[
							[
								193,
								193
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_helper.box_height": 22,
							"color_helper.color_scheme": "Packages/Theme - Spacegray/base16-ocean.dark.tmTheme",
							"color_helper.file_palette":
							[
							],
							"color_helper.preview_meta":
							{
							},
							"color_helper.scan":
							{
								"current_ext": ".properties",
								"current_syntax": "Java/JavaProperties",
								"enabled": false,
								"last_updated": 1479573505.42
							},
							"syntax": "Packages/Java/JavaProperties.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "src/main/java/org/openhab/voice/ivona/tool/CreateTTSCache.java",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4421,
						"regions":
						{
						},
						"selection":
						[
							[
								4341,
								4341
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										4353,
										4354
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										4319,
										4320
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_helper.box_height": 22,
							"color_helper.color_scheme": "Packages/Theme - Spacegray/base16-ocean.dark.tmTheme",
							"color_helper.file_palette":
							[
							],
							"color_helper.preview_meta":
							{
							},
							"color_helper.scan":
							{
								"current_ext": ".java",
								"current_syntax": "Java/Java",
								"enabled": false,
								"last_updated": 1479573505.42
							},
							"syntax": "Packages/Java/Java.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 161.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src/main/java/org/openhab/voice/ivona/internal/IvonaVoice.java",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1643,
						"regions":
						{
						},
						"selection":
						[
							[
								546,
								546
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_helper.box_height": 22,
							"color_helper.color_scheme": "Packages/Theme - Spacegray/base16-ocean.dark.tmTheme",
							"color_helper.file_palette":
							[
							],
							"color_helper.preview_meta":
							{
							},
							"color_helper.scan":
							{
								"current_ext": ".java",
								"current_syntax": "Java/Java",
								"enabled": false,
								"last_updated": 1479573505.42
							},
							"syntax": "Packages/Java/Java.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "src/main/java/org/openhab/voice/ivona/internal/IvonaAudioStream.java",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 966,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_helper.box_height": 22,
							"color_helper.color_scheme": "Packages/Theme - Spacegray/base16-ocean.dark.tmTheme",
							"color_helper.file_palette":
							[
							],
							"color_helper.preview_meta":
							{
							},
							"color_helper.scan":
							{
								"current_ext": ".java",
								"current_syntax": "Java/Java",
								"enabled": false,
								"last_updated": 1479573505.42
							},
							"syntax": "Packages/Java/Java.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "src/main/java/org/openhab/voice/ivona/internal/IvonaTTSService.java",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7538,
						"regions":
						{
						},
						"selection":
						[
							[
								4632,
								4632
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										4696,
										4697
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										4477,
										4478
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_helper.box_height": 22,
							"color_helper.color_scheme": "Packages/Theme - Spacegray/base16-ocean.dark.tmTheme",
							"color_helper.file_palette":
							[
							],
							"color_helper.preview_meta":
							{
							},
							"color_helper.scan":
							{
								"current_ext": ".java",
								"current_syntax": "Java/Java",
								"enabled": false,
								"last_updated": 1479573505.42
							},
							"syntax": "Packages/Java/Java.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2748.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "",
	"replace":
	{
		"height": 80.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"package",
				"Package Control Messages"
			],
			[
				"wea",
				"org.openhab.ui.habpanel\\web\\app\\widgets\\weather\\weather.tpl.html"
			],
			[
				"",
				"org.openhab.ui.habpanel\\web\\app\\widgets\\weather\\weather.widget.js"
			],
			[
				"switch",
				"org.openhab.ui.habpanel\\web\\app\\widgets\\switch\\switch.widget.js"
			],
			[
				"weather",
				"org.openhab.ui.habpanel\\web\\app\\widgets\\weather\\weather.tpl.html"
			],
			[
				"weat",
				"org.openhab.ui.habpanel\\web\\app\\widgets\\weather\\weather.scss"
			],
			[
				"clima",
				"org.openhab.ui.habpanel\\web\\app\\widgets\\weather\\_climaicon.scss"
			],
			[
				"_math",
				"org.openhab.ui.habpanel\\web\\app\\widgets\\weather\\_math.scss"
			],
			[
				"_clima",
				"org.openhab.ui.habpanel\\web\\app\\widgets\\weather\\_climaicon.scss"
			],
			[
				"settings",
				"org.openhab.ui.habpanel\\web\\app\\settings\\settings.html"
			],
			[
				"gulp",
				"org.openhab.ui.habpanel\\web\\gulpfile.js"
			],
			[
				"index",
				"org.openhab.ui.habpanel\\web\\index.html"
			],
			[
				"g",
				"org.openhab.ui.habpanel\\web\\gulpfile.js"
			],
			[
				"gul",
				"org.openhab.ui.habpanel\\web\\gulpfile.js"
			],
			[
				"app.",
				"org.openhab.ui.habpanel\\web\\app\\app.js"
			],
			[
				"imagesett",
				"org.openhab.ui.habpanel\\web\\app\\widgets\\image\\image.settings.tpl.html"
			],
			[
				"vendor",
				"org.openhab.ui.habpanel\\web\\vendor\\vendor.scss"
			],
			[
				"selectize",
				"org.openhab.ui.habpanel\\web\\bower_components\\selectize\\dist\\sass\\selectize.scss"
			],
			[
				"packa",
				"org.openhab.ui.habpanel\\web\\package.json"
			],
			[
				"dashoview",
				"org.openhab.ui.habpanel\\web\\app\\dashboard\\dashboard.view.controller.js"
			],
			[
				"menu",
				"org.openhab.ui.habpanel\\web\\app\\menu\\menu.html"
			],
			[
				"settin",
				"org.openhab.ui.habpanel\\web\\app\\settings\\settings.html"
			],
			[
				"stylesmin",
				"org.openhab.ui.habpanel\\web\\assets\\styles.min.css"
			],
			[
				"style",
				"org.openhab.ui.habpanel\\web\\assets\\styles.less"
			],
			[
				"dasho",
				"org.openhab.ui.habpanel\\web\\assets\\styles\\dashboard.scss"
			],
			[
				"roboto-font",
				"org.openhab.ui.habpanel\\web\\bower_components\\roboto-fontface\\css\\roboto\\sass\\roboto-fontface.scss"
			],
			[
				"vendro",
				"org.openhab.ui.habpanel\\web\\vendor\\vendor.scss"
			],
			[
				"labelhtml",
				"org.openhab.ui.habpanel\\web\\app\\widgets\\label\\label.tpl.html"
			],
			[
				"common",
				"org.openhab.ui.habpanel\\web\\assets\\styles\\common.scss"
			],
			[
				"_variab",
				"org.openhab.ui.habpanel\\web\\bower_components\\bootstrap-sass\\assets\\stylesheets\\bootstrap\\_variables.scss"
			],
			[
				"roboto-fon",
				"org.openhab.ui.habpanel\\web\\bower_components\\roboto-fontface\\css\\roboto\\sass\\roboto-fontface.scss"
			],
			[
				"eslintrc",
				"org.openhab.ui.habpanel\\web\\.eslintrc.yaml"
			],
			[
				"variable",
				"org.openhab.ui.habpanel\\web\\assets\\styles\\variables.scss"
			],
			[
				"_vari",
				"org.openhab.ui.habpanel\\web\\bower_components\\bootstrap-sass\\assets\\stylesheets\\bootstrap\\_variables.scss"
			],
			[
				"widgets",
				"org.openhab.ui.habpanel\\web\\assets\\styles\\widgets.scss"
			],
			[
				"variabl",
				"org.openhab.ui.habpanel\\web\\assets\\styles\\variables.scss"
			],
			[
				"sitemap",
				"org.openhab.ui.habpanel\\web\\sitemap.js"
			],
			[
				"con",
				"org.openhab.ui.habpanel\\CONTRIBUTING.md"
			],
			[
				"main",
				"org.openhab.ui.habpanel\\MAINTAINERS"
			],
			[
				"aut",
				"org.openhab.ui.habpanel\\AUTHORS"
			],
			[
				"vair",
				"org.openhab.ui.habpanel\\web\\assets\\less\\variables.scss"
			],
			[
				"variab",
				"org.openhab.ui.habpanel\\web\\assets\\less\\variables.scss"
			],
			[
				"bower",
				"org.openhab.ui.habpanel\\web\\bower.json"
			],
			[
				"bowe",
				"org.openhab.ui.habpanel\\web\\bower.json"
			],
			[
				"widget",
				"org.openhab.ui.habpanel\\web\\assets\\less\\widgets.less"
			],
			[
				"gulpf",
				"org.openhab.ui.habpanel\\web\\gulpfile.js"
			],
			[
				"variables",
				"org.openhab.ui.habpanel\\web\\bower_components\\bootstrap\\less\\variables.less"
			],
			[
				"varia",
				"board\\bower_components\\font-awesome\\less\\variables.less"
			],
			[
				"myfi",
				"board\\packages\\demo\\dashboards\\myfirst_dashboard.json"
			],
			[
				"example1",
				"board\\packages\\atlassian\\dashboards\\example1.json"
			],
			[
				"pictu",
				"board\\packages\\demo\\jobs\\picture-of-the-day\\picture-of-the-day.js"
			],
			[
				"generate-da",
				"board\\packages\\charts\\jobs\\generate-data\\generate-data.js"
			],
			[
				"rick",
				"board\\packages\\charts\\dashboards\\rickshaw-demo-dashboard.json"
			],
			[
				"rickshaw",
				"board\\packages\\charts\\dashboards\\rickshaw-demo-dashboard.json"
			],
			[
				"picture-of",
				"board\\packages\\demo\\jobs\\picture-of-the-day\\picture-of-the-day.js"
			],
			[
				"twitter",
				"board\\packages\\charts\\widgets\\twitter\\twitter.js"
			],
			[
				"failed",
				"board\\packages\\atlassian\\jobs\\failed-builds\\failed-builds.js"
			],
			[
				"boom",
				"C:\\projects\\habmin\\boom.bat"
			],
			[
				"schedule",
				"packages\\atlassian\\node_modules\\bluebird\\js\\main\\schedule.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 408.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
